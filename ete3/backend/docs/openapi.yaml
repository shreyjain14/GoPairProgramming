openapi: 3.0.0
info:
  title: Cinema Booking API
  version: 1.0.0
  description: API for cinema ticket booking and management system

servers:
  - url: http://localhost:8080/api
    description: Local development server

components:
  schemas:
    Movie:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        duration:
          type: integer
        genre:
          type: string
        poster_url:
          type: string
          description: URL to the movie poster image
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Show:
      type: object
      properties:
        id:
          type: integer
        movie_id:
          type: integer
        theater_id:
          type: integer
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        price:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Seat:
      type: object
      properties:
        id:
          type: integer
        theater_id:
          type: integer
        row_number:
          type: integer
        seat_number:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    BookingRequest:
      type: object
      required:
        - show_id
        - seat_ids
      properties:
        show_id:
          type: integer
        seat_ids:
          type: array
          items:
            type: integer

    BookingResponse:
      type: object
      properties:
        booking_id:
          type: integer
        status:
          type: string
        message:
          type: string

paths:
  /cinema/movies:
    get:
      summary: Get all movies
      responses:
        '200':
          description: List of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'

    post:
      summary: Create a new movie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - duration
              properties:
                title:
                  type: string
                description:
                  type: string
                duration:
                  type: integer
                genre:
                  type: string
                poster_url:
                  type: string
                  description: URL to the movie poster image
      responses:
        '201':
          description: Movie created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid request

  /cinema/movies/{id}:
    get:
      summary: Get a movie by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Movie details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found
    
    put:
      summary: Update a movie
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                duration:
                  type: integer
                genre:
                  type: string
                poster_url:
                  type: string
                  description: URL to the movie poster image
      responses:
        '200':
          description: Movie updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid request
        '404':
          description: Movie not found

  /cinema/movies/{id}/shows:
    get:
      summary: Get shows for a specific movie
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of shows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Show'
        '400':
          description: Invalid movie ID

  /cinema/shows/{id}/seats:
    get:
      summary: Get available seats for a show
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of available seats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seat'
        '400':
          description: Invalid show ID

  /cinema/bookings:
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
      responses:
        '200':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'
        '400':
          description: Invalid request
        '409':
          description: Seats already booked

    get:
      summary: Get all bookings
      responses:
        '200':
          description: List of all bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    show_id:
                      type: integer
                    seat_id:
                      type: integer
                    status:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time

  /cinema/bookings/{id}:
    delete:
      summary: Cancel a booking
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Booking cancelled successfully
        '400':
          description: Invalid booking ID
        '404':
          description: Booking not found 